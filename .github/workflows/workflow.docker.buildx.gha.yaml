# https://dev.to/cloudx/multi-arch-docker-images-the-easy-way-with-github-actions-4k54
# https://docs.docker.com/ci-cd/github-actions/
# assumes the image to build is the owner/current repo

name: Build docker buildx image

# https://docs.github.com/en/actions/learn-github-actions/environment-variables
env: 
    IMAGE: ${GITHUB_REPOSITORY}

on:
  workflow_dispatch
  push:
    branches:
        - "main" 
        # for testing push to @rich's branches
        - "rich-*"
    pull_request:
        base:
        - "main"

# need permissions if pushing to gchr.io
permissions:
    packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup QEMU
      uses: actions/setup-qemu@v

    - name: Setup buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GHCR
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    # this for docker.io registry
    # create a Dockerhub access Token and put into github secret
    # https://docs.docker.com/docker-hub/access-tokens/
    # https://docs.github.com/en/actions/security-guides/encrypted-secrets
    # - name: Login to Docker Hub
    #   uses: docker/login-action@v1
    #   with:
    #     registry: docker.io
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker meta data tags
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/$IMAGE:latest
        tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semvar,pattern={{version}}
            type=semvar,pattern={{major}}
            type=semvar,pattern={{major}.{{minor}}
            type=semvar,pattern={{major}}.{{minor}}.{{patch}}
            type=sha

    - name: Build image and push
      uses: docker/build-push-action@v2
      with:
        context: ..
        file: ./docker/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        # instead of manual tgs use the metadata-action to generate them
        #tags: ${{GITHUB_REPOSITORY}}:${{GITHUB_REF_NAME}}, ${{GITHUB_REPOSITORY}}:${{GITHUB_SHA}}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
